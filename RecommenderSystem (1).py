{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "acba4c7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5c1b0f7c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b7e9e788",
   "metadata": {},
   "outputs": [],
   "source": [
    "column_names= ['user_id', 'item_id', 'ratings', 'timestamp']\n",
    "df = pd.read_csv('u.data', sep='\\t', names=column_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "54be83bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>item_id</th>\n",
       "      <th>ratings</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>5</td>\n",
       "      <td>881250949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>5</td>\n",
       "      <td>881250949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>133</td>\n",
       "      <td>1</td>\n",
       "      <td>881250949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>196</td>\n",
       "      <td>242</td>\n",
       "      <td>3</td>\n",
       "      <td>881250949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>186</td>\n",
       "      <td>302</td>\n",
       "      <td>3</td>\n",
       "      <td>891717742</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  item_id  ratings  timestamp\n",
       "0        0       50        5  881250949\n",
       "1        0      172        5  881250949\n",
       "2        0      133        1  881250949\n",
       "3      196      242        3  881250949\n",
       "4      186      302        3  891717742"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1350c845",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>item_id</th>\n",
       "      <th>title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Toy Story (1995)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>GoldenEye (1995)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Four Rooms (1995)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Get Shorty (1995)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Copycat (1995)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   item_id              title\n",
       "0        1   Toy Story (1995)\n",
       "1        2   GoldenEye (1995)\n",
       "2        3  Four Rooms (1995)\n",
       "3        4  Get Shorty (1995)\n",
       "4        5     Copycat (1995)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_title = pd.read_csv(\"Movie_Id_Titles\")\n",
    "movies_title.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bd3beb07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>item_id</th>\n",
       "      <th>ratings</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>5</td>\n",
       "      <td>881250949</td>\n",
       "      <td>Star Wars (1977)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>290</td>\n",
       "      <td>50</td>\n",
       "      <td>5</td>\n",
       "      <td>880473582</td>\n",
       "      <td>Star Wars (1977)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>79</td>\n",
       "      <td>50</td>\n",
       "      <td>4</td>\n",
       "      <td>891271545</td>\n",
       "      <td>Star Wars (1977)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>50</td>\n",
       "      <td>5</td>\n",
       "      <td>888552084</td>\n",
       "      <td>Star Wars (1977)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>50</td>\n",
       "      <td>5</td>\n",
       "      <td>879362124</td>\n",
       "      <td>Star Wars (1977)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  item_id  ratings  timestamp             title\n",
       "0        0       50        5  881250949  Star Wars (1977)\n",
       "1      290       50        5  880473582  Star Wars (1977)\n",
       "2       79       50        4  891271545  Star Wars (1977)\n",
       "3        2       50        5  888552084  Star Wars (1977)\n",
       "4        8       50        5  879362124  Star Wars (1977)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.merge(df,movies_title)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "22c015b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set_style('white')\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "61c35109",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "title\n",
       "They Made Me a Criminal (1939)                5.0\n",
       "Marlene Dietrich: Shadow and Light (1996)     5.0\n",
       "Saint of Fort Washington, The (1993)          5.0\n",
       "Someone Else's America (1995)                 5.0\n",
       "Star Kid (1997)                               5.0\n",
       "Name: ratings, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('title')['ratings'].mean().sort_values(ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "df97c5d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "title\n",
       "Star Wars (1977)             584\n",
       "Contact (1997)               509\n",
       "Fargo (1996)                 508\n",
       "Return of the Jedi (1983)    507\n",
       "Liar Liar (1997)             485\n",
       "Name: ratings, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('title')['ratings'].count().sort_values(ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ef11756b",
   "metadata": {},
   "outputs": [],
   "source": [
    "rating=pd.DataFrame(df.groupby('title')['ratings'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "659312e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ratings</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>'Til There Was You (1997)</th>\n",
       "      <td>2.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1-900 (1994)</th>\n",
       "      <td>2.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101 Dalmatians (1996)</th>\n",
       "      <td>2.908257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 Angry Men (1957)</th>\n",
       "      <td>4.344000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187 (1997)</th>\n",
       "      <td>3.024390</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            ratings\n",
       "title                              \n",
       "'Til There Was You (1997)  2.333333\n",
       "1-900 (1994)               2.600000\n",
       "101 Dalmatians (1996)      2.908257\n",
       "12 Angry Men (1957)        4.344000\n",
       "187 (1997)                 3.024390"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rating.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d0f44a48",
   "metadata": {},
   "outputs": [],
   "source": [
    "rating['numb of rating'] = pd.DataFrame(df.groupby('title')['ratings'].count())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "bb9cf336",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ratings</th>\n",
       "      <th>numb of rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>'Til There Was You (1997)</th>\n",
       "      <td>2.333333</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1-900 (1994)</th>\n",
       "      <td>2.600000</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101 Dalmatians (1996)</th>\n",
       "      <td>2.908257</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 Angry Men (1957)</th>\n",
       "      <td>4.344000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187 (1997)</th>\n",
       "      <td>3.024390</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            ratings  numb of rating\n",
       "title                                              \n",
       "'Til There Was You (1997)  2.333333               9\n",
       "1-900 (1994)               2.600000               5\n",
       "101 Dalmatians (1996)      2.908257             109\n",
       "12 Angry Men (1957)        4.344000             125\n",
       "187 (1997)                 3.024390              41"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rating.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8301bc71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "rating['numb of rating'].hist(bins=80)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "782b6452",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,4))\n",
    "rating['ratings'].hist(bins=70)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "3363c3db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x2a62094eb80>"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.jointplot(x='ratings',y='numb of rating',data=rating,alpha=0.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "533b84c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "moviemat = df.pivot_table(index='user_id',columns='title',values='ratings')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "ec67f61b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>title</th>\n",
       "      <th>'Til There Was You (1997)</th>\n",
       "      <th>1-900 (1994)</th>\n",
       "      <th>101 Dalmatians (1996)</th>\n",
       "      <th>12 Angry Men (1957)</th>\n",
       "      <th>187 (1997)</th>\n",
       "      <th>2 Days in the Valley (1996)</th>\n",
       "      <th>20,000 Leagues Under the Sea (1954)</th>\n",
       "      <th>2001: A Space Odyssey (1968)</th>\n",
       "      <th>3 Ninjas: High Noon At Mega Mountain (1998)</th>\n",
       "      <th>39 Steps, The (1935)</th>\n",
       "      <th>...</th>\n",
       "      <th>Yankee Zulu (1994)</th>\n",
       "      <th>Year of the Horse (1997)</th>\n",
       "      <th>You So Crazy (1994)</th>\n",
       "      <th>Young Frankenstein (1974)</th>\n",
       "      <th>Young Guns (1988)</th>\n",
       "      <th>Young Guns II (1990)</th>\n",
       "      <th>Young Poisoner's Handbook, The (1995)</th>\n",
       "      <th>Zeus and Roxanne (1997)</th>\n",
       "      <th>unknown</th>\n",
       "      <th>Á köldum klaka (Cold Fever) (1994)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1664 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "title    'Til There Was You (1997)  1-900 (1994)  101 Dalmatians (1996)  \\\n",
       "user_id                                                                   \n",
       "0                              NaN           NaN                    NaN   \n",
       "1                              NaN           NaN                    2.0   \n",
       "2                              NaN           NaN                    NaN   \n",
       "3                              NaN           NaN                    NaN   \n",
       "4                              NaN           NaN                    NaN   \n",
       "\n",
       "title    12 Angry Men (1957)  187 (1997)  2 Days in the Valley (1996)  \\\n",
       "user_id                                                                 \n",
       "0                        NaN         NaN                          NaN   \n",
       "1                        5.0         NaN                          NaN   \n",
       "2                        NaN         NaN                          NaN   \n",
       "3                        NaN         2.0                          NaN   \n",
       "4                        NaN         NaN                          NaN   \n",
       "\n",
       "title    20,000 Leagues Under the Sea (1954)  2001: A Space Odyssey (1968)  \\\n",
       "user_id                                                                      \n",
       "0                                        NaN                           NaN   \n",
       "1                                        3.0                           4.0   \n",
       "2                                        NaN                           NaN   \n",
       "3                                        NaN                           NaN   \n",
       "4                                        NaN                           NaN   \n",
       "\n",
       "title    3 Ninjas: High Noon At Mega Mountain (1998)  39 Steps, The (1935)  \\\n",
       "user_id                                                                      \n",
       "0                                                NaN                   NaN   \n",
       "1                                                NaN                   NaN   \n",
       "2                                                1.0                   NaN   \n",
       "3                                                NaN                   NaN   \n",
       "4                                                NaN                   NaN   \n",
       "\n",
       "title    ...  Yankee Zulu (1994)  Year of the Horse (1997)  \\\n",
       "user_id  ...                                                 \n",
       "0        ...                 NaN                       NaN   \n",
       "1        ...                 NaN                       NaN   \n",
       "2        ...                 NaN                       NaN   \n",
       "3        ...                 NaN                       NaN   \n",
       "4        ...                 NaN                       NaN   \n",
       "\n",
       "title    You So Crazy (1994)  Young Frankenstein (1974)  Young Guns (1988)  \\\n",
       "user_id                                                                      \n",
       "0                        NaN                        NaN                NaN   \n",
       "1                        NaN                        5.0                3.0   \n",
       "2                        NaN                        NaN                NaN   \n",
       "3                        NaN                        NaN                NaN   \n",
       "4                        NaN                        NaN                NaN   \n",
       "\n",
       "title    Young Guns II (1990)  Young Poisoner's Handbook, The (1995)  \\\n",
       "user_id                                                                \n",
       "0                         NaN                                    NaN   \n",
       "1                         NaN                                    NaN   \n",
       "2                         NaN                                    NaN   \n",
       "3                         NaN                                    NaN   \n",
       "4                         NaN                                    NaN   \n",
       "\n",
       "title    Zeus and Roxanne (1997)  unknown  Á köldum klaka (Cold Fever) (1994)  \n",
       "user_id                                                                        \n",
       "0                            NaN      NaN                                 NaN  \n",
       "1                            NaN      4.0                                 NaN  \n",
       "2                            NaN      NaN                                 NaN  \n",
       "3                            NaN      NaN                                 NaN  \n",
       "4                            NaN      NaN                                 NaN  \n",
       "\n",
       "[5 rows x 1664 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "moviemat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "4bc21073",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ratings</th>\n",
       "      <th>numb of rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Star Wars (1977)</th>\n",
       "      <td>4.359589</td>\n",
       "      <td>584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Contact (1997)</th>\n",
       "      <td>3.803536</td>\n",
       "      <td>509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fargo (1996)</th>\n",
       "      <td>4.155512</td>\n",
       "      <td>508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Return of the Jedi (1983)</th>\n",
       "      <td>4.007890</td>\n",
       "      <td>507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Liar Liar (1997)</th>\n",
       "      <td>3.156701</td>\n",
       "      <td>485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>English Patient, The (1996)</th>\n",
       "      <td>3.656965</td>\n",
       "      <td>481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Scream (1996)</th>\n",
       "      <td>3.441423</td>\n",
       "      <td>478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Toy Story (1995)</th>\n",
       "      <td>3.878319</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Air Force One (1997)</th>\n",
       "      <td>3.631090</td>\n",
       "      <td>431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Independence Day (ID4) (1996)</th>\n",
       "      <td>3.438228</td>\n",
       "      <td>429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Raiders of the Lost Ark (1981)</th>\n",
       "      <td>4.252381</td>\n",
       "      <td>420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Godfather, The (1972)</th>\n",
       "      <td>4.283293</td>\n",
       "      <td>413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pulp Fiction (1994)</th>\n",
       "      <td>4.060914</td>\n",
       "      <td>394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Twelve Monkeys (1995)</th>\n",
       "      <td>3.798469</td>\n",
       "      <td>392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silence of the Lambs, The (1991)</th>\n",
       "      <td>4.289744</td>\n",
       "      <td>390</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   ratings  numb of rating\n",
       "title                                                     \n",
       "Star Wars (1977)                  4.359589             584\n",
       "Contact (1997)                    3.803536             509\n",
       "Fargo (1996)                      4.155512             508\n",
       "Return of the Jedi (1983)         4.007890             507\n",
       "Liar Liar (1997)                  3.156701             485\n",
       "English Patient, The (1996)       3.656965             481\n",
       "Scream (1996)                     3.441423             478\n",
       "Toy Story (1995)                  3.878319             452\n",
       "Air Force One (1997)              3.631090             431\n",
       "Independence Day (ID4) (1996)     3.438228             429\n",
       "Raiders of the Lost Ark (1981)    4.252381             420\n",
       "Godfather, The (1972)             4.283293             413\n",
       "Pulp Fiction (1994)               4.060914             394\n",
       "Twelve Monkeys (1995)             3.798469             392\n",
       "Silence of the Lambs, The (1991)  4.289744             390"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rating.sort_values('numb of rating',ascending=False).head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "7ebc83c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ratings</th>\n",
       "      <th>numb of rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>'Til There Was You (1997)</th>\n",
       "      <td>2.333333</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1-900 (1994)</th>\n",
       "      <td>2.600000</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101 Dalmatians (1996)</th>\n",
       "      <td>2.908257</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 Angry Men (1957)</th>\n",
       "      <td>4.344000</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187 (1997)</th>\n",
       "      <td>3.024390</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            ratings  numb of rating\n",
       "title                                              \n",
       "'Til There Was You (1997)  2.333333               9\n",
       "1-900 (1994)               2.600000               5\n",
       "101 Dalmatians (1996)      2.908257             109\n",
       "12 Angry Men (1957)        4.344000             125\n",
       "187 (1997)                 3.024390              41"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rating.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "95db1a63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "user_id\n",
       "0    5.0\n",
       "1    5.0\n",
       "2    5.0\n",
       "3    NaN\n",
       "4    5.0\n",
       "Name: Star Wars (1977), dtype: float64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "starwars_user_ratings = moviemat['Star Wars (1977)']\n",
    "liarliar_user_ratings = moviemat['Liar Liar (1997)']\n",
    "starwars_user_ratings.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "6de7d572",
   "metadata": {},
   "outputs": [],
   "source": [
    "similar_to_starwars = moviemat.corrwith(starwars_user_ratings)\n",
    "similar_to_liarliar = moviemat.corrwith(liarliar_user_ratings)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "62bfbe09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Correlation</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>'Til There Was You (1997)</th>\n",
       "      <td>0.872872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1-900 (1994)</th>\n",
       "      <td>-0.645497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101 Dalmatians (1996)</th>\n",
       "      <td>0.211132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 Angry Men (1957)</th>\n",
       "      <td>0.184289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187 (1997)</th>\n",
       "      <td>0.027398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Correlation\n",
       "title                                 \n",
       "'Til There Was You (1997)     0.872872\n",
       "1-900 (1994)                 -0.645497\n",
       "101 Dalmatians (1996)         0.211132\n",
       "12 Angry Men (1957)           0.184289\n",
       "187 (1997)                    0.027398"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_starwars = pd.DataFrame(similar_to_starwars,columns=['Correlation'])\n",
    "corr_starwars.dropna(inplace=True)\n",
    "corr_starwars.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "a20140bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Correlation</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Hollow Reed (1996)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Stripes (1981)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Beans of Egypt, Maine, The (1994)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Safe Passage (1994)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Old Lady Who Walked in the Sea, The (Vieille qui marchait dans la mer, La) (1991)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlaw, The (1943)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Line King: Al Hirschfeld, The (1996)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hurricane Streets (1998)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Good Man in Africa, A (1994)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Scarlet Letter, The (1926)</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    Correlation\n",
       "title                                                          \n",
       "Hollow Reed (1996)                                          1.0\n",
       "Stripes (1981)                                              1.0\n",
       "Beans of Egypt, Maine, The (1994)                           1.0\n",
       "Safe Passage (1994)                                         1.0\n",
       "Old Lady Who Walked in the Sea, The (Vieille qu...          1.0\n",
       "Outlaw, The (1943)                                          1.0\n",
       "Line King: Al Hirschfeld, The (1996)                        1.0\n",
       "Hurricane Streets (1998)                                    1.0\n",
       "Good Man in Africa, A (1994)                                1.0\n",
       "Scarlet Letter, The (1926)                                  1.0"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_starwars.sort_values('Correlation',ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "d3bc58c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Correlation</th>\n",
       "      <th>numb of rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Liar Liar (1997)</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Batman Forever (1995)</th>\n",
       "      <td>0.516968</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mask, The (1994)</th>\n",
       "      <td>0.484650</td>\n",
       "      <td>129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Down Periscope (1996)</th>\n",
       "      <td>0.472681</td>\n",
       "      <td>101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Con Air (1997)</th>\n",
       "      <td>0.469828</td>\n",
       "      <td>137</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Correlation  numb of rating\n",
       "title                                             \n",
       "Liar Liar (1997)          1.000000             485\n",
       "Batman Forever (1995)     0.516968             114\n",
       "Mask, The (1994)          0.484650             129\n",
       "Down Periscope (1996)     0.472681             101\n",
       "Con Air (1997)            0.469828             137"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_liarliar = pd.DataFrame(similar_to_liarliar,columns=['Correlation'])\n",
    "corr_liarliar.dropna(inplace=True)\n",
    "corr_liarliar = corr_liarliar.join(rating['numb of rating'])\n",
    "corr_liarliar[corr_liarliar['numb of rating']>100].sort_values('Correlation',ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "12e80c3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Correlation</th>\n",
       "      <th>numb of rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>'Til There Was You (1997)</th>\n",
       "      <td>0.872872</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1-900 (1994)</th>\n",
       "      <td>-0.645497</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101 Dalmatians (1996)</th>\n",
       "      <td>0.211132</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 Angry Men (1957)</th>\n",
       "      <td>0.184289</td>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187 (1997)</th>\n",
       "      <td>0.027398</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Correlation  numb of rating\n",
       "title                                                 \n",
       "'Til There Was You (1997)     0.872872               9\n",
       "1-900 (1994)                 -0.645497               5\n",
       "101 Dalmatians (1996)         0.211132             109\n",
       "12 Angry Men (1957)           0.184289             125\n",
       "187 (1997)                    0.027398              41"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_starwars = corr_starwars.join(rating['numb of rating'])\n",
    "corr_starwars.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "b12fae5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Correlation</th>\n",
       "      <th>numb of rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Star Wars (1977)</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Empire Strikes Back, The (1980)</th>\n",
       "      <td>0.748353</td>\n",
       "      <td>368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Return of the Jedi (1983)</th>\n",
       "      <td>0.672556</td>\n",
       "      <td>507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Raiders of the Lost Ark (1981)</th>\n",
       "      <td>0.536117</td>\n",
       "      <td>420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Austin Powers: International Man of Mystery (1997)</th>\n",
       "      <td>0.377433</td>\n",
       "      <td>130</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    Correlation  \\\n",
       "title                                                             \n",
       "Star Wars (1977)                                       1.000000   \n",
       "Empire Strikes Back, The (1980)                        0.748353   \n",
       "Return of the Jedi (1983)                              0.672556   \n",
       "Raiders of the Lost Ark (1981)                         0.536117   \n",
       "Austin Powers: International Man of Mystery (1997)     0.377433   \n",
       "\n",
       "                                                    numb of rating  \n",
       "title                                                               \n",
       "Star Wars (1977)                                               584  \n",
       "Empire Strikes Back, The (1980)                                368  \n",
       "Return of the Jedi (1983)                                      507  \n",
       "Raiders of the Lost Ark (1981)                                 420  \n",
       "Austin Powers: International Man of Mystery (1997)             130  "
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_starwars[corr_starwars['numb of rating']>100].sort_values('Correlation',ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f7c82b8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
